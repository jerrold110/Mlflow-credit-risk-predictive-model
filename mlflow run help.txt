  -e, --entry-point NAME        Entry point within project. [default: main].
                                If the entry point is not found, attempts to
                                run the project file with the specified name
                                as a script, using 'python' to run .py files
                                and the default shell (specified by
                                environment variable $SHELL) to run .sh files
  -v, --version VERSION         Version of the project to run, as a Git commit
                                reference for Git projects.
  -P, --param-list NAME=VALUE   A parameter for the run, of the form -P
                                name=value. Provided parameters that are not
                                in the list of parameters for an entry point
                                will be passed to the corresponding entry
                                point as command-line arguments in the form
                                `--name value`
  -A, --docker-args NAME=VALUE  A `docker run` argument or flag, of the form
                                -A name=value (e.g. -A gpus=all) or -A name
                                (e.g. -A t). The argument will then be passed
                                as `docker run --name value` or `docker run
                                --name` respectively.
  --experiment-name TEXT        Name of the experiment under which to launch
                                the run. If not specified, 'experiment-id'
                                option will be used to launch run.
  --experiment-id TEXT          ID of the experiment under which to launch the
                                run.
  -b, --backend BACKEND         Execution backend to use for run. Supported
                                values: 'local', 'databricks', kubernetes
                                (experimental). Defaults to 'local'. If
                                running against Databricks, will run against a
                                Databricks workspace determined as follows: if
                                a Databricks tracking URI of the form
                                'databricks://profile' has been set (e.g. by
                                setting the MLFLOW_TRACKING_URI environment
                                variable), will run against the workspace
                                specified by <profile>. Otherwise, runs
                                against the workspace specified by the default
                                Databricks CLI profile. See
                                https://github.com/databricks/databricks-cli
                                for more info on configuring a Databricks CLI
                                profile.
  -c, --backend-config FILE     Path to JSON file (must end in '.json') or
                                JSON string which will be passed as config to
                                the backend. The exact content which should be
                                provided is different for each execution
                                backend and is documented at https://www.mlflo
                                w.org/docs/latest/projects.html.
  --env-manager TEXT            If specified, create an environment for
                                MLproject using the specified environment
                                manager. The following values are supported:

                                - local: use the local environment
                                - virtualenv: use virtualenv (and pyenv for Python version management)
                                - conda: use conda

                                If unspecified, the appropriate environment
                                manager is automatically selected based on the
                                project configuration. For example, if
                                `MLproject.yaml` contains a `python_env` key,
                                virtualenv is used.
  --storage-dir TEXT            Only valid when ``backend`` is local. MLflow
                                downloads artifacts from distributed URIs
                                passed to parameters of type 'path' to
                                subdirectories of storage_dir.
  --run-id RUN_ID               If specified, the given run ID will be used
                                instead of creating a new run. Note: this
                                argument is used internally by the MLflow
                                project APIs and should not be specified.
  --run-name RUN_NAME           The name to give the MLflow Run associated
                                with the project execution. If not specified,
                                the MLflow Run name is left unset.
  --build-image                 Only valid for Docker projects. If specified,
                                build a new Docker image that's based on the
                                image specified by the `image` field in the
                                MLproject file, and contains files in the
                                project directory.
  --help                        Show this message and exit.